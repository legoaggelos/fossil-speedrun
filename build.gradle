plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	mavenCentral()
	maven {
		name = "ParchmentMC"
		setUrl("https://maven.parchmentmc.org")
	}
	maven {
		name = 'Sponge / Mixin'
		url = 'https://repo.spongepowered.org/repository/maven-public/'
	}
	maven {
		setUrl("https://cursemaven.com")
		content {
			includeGroup("curse.maven")
		}
	}
	mavenLocal()

	maven {
		name = "tterrag maven"
		setUrl("https://maven.tterrag.com/")
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroup "com.eliotlash.mclib"
		}
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"fossil-speedrun" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	// To change the versions see the gradle.properties file
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
	}

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation "com.eliotlash.mclib:mclib:20"
	modImplementation "maven.modrinth:speedrunigt:ti0VUd3G"
	modImplementation "maven.modrinth:fossils-and-archeology-revival:JnJ2H2LD"
	modImplementation "maven.modrinth:architectury-api:WbL7MStR"
	modImplementation "maven.modrinth:more-hitboxes:M4VvMcZQ"
	modImplementation "maven.modrinth:geckolib:Lj5ypG1U"
	modImplementation "maven.modrinth:terrablender:J1S3aA8i"
	modImplementation include("maven.modrinth:sructurized-reborn:1.20.1-01")//Structurized Reborneborn
	modApi include("teamreborn:energy:3.0.0")
	implementation "com.eliotlash.mclib:mclib:20"
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.3")
	modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.3")
	modImplementation include("maven.modrinth:midnightlib:1.4.1-fabric")


	modImplementation("com.electronwill.night-config:core:3.6.6")
	modImplementation("com.electronwill.night-config:toml:3.6.6")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}